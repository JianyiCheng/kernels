module  {
  func @syrk(%arg0: i128, %arg1: i128, %arg2: i128, %arg3: i128, %arg4: i128, %arg5: i128, %arg6: i128, %arg7: i128, %arg8: i128, %arg9: i128, %arg10: i128, %arg11: i128, %arg12: i128, %arg13: i128, %arg14: i128, %arg15: i128, %arg16: i128, %arg17: i128) -> (i128, i128, i128, i128, i128, i128, i128, i128, i128)  {
    %c9_i128 = constant 9 : i128
    %c10_i128 = constant 10 : i128
    %c0 = constant 0 : index
    %0 = muli %arg9, %c10_i128 : i128
    %1 = muli %arg0, %arg0 : i128
    %2 = muli %arg1, %arg1 : i128
    %3 = addi %1, %2 : i128
    %4 = muli %arg2, %arg2 : i128
    %5 = addi %3, %4 : i128
    %6 = muli %5, %c9_i128 : i128
    %7 = addi %0, %6 : i128
    %8 = muli %arg10, %c10_i128 : i128
    %9 = muli %arg0, %arg3 : i128
    %10 = muli %arg1, %arg4 : i128
    %11 = addi %9, %10 : i128
    %12 = muli %arg2, %arg5 : i128
    %13 = addi %11, %12 : i128
    %14 = muli %13, %c9_i128 : i128
    %15 = addi %8, %14 : i128
    %16 = muli %arg11, %c10_i128 : i128
    %17 = muli %arg0, %arg6 : i128
    %18 = muli %arg1, %arg7 : i128
    %19 = addi %17, %18 : i128
    %20 = muli %arg2, %arg8 : i128
    %21 = addi %19, %20 : i128
    %22 = muli %21, %c9_i128 : i128
    %23 = addi %16, %22 : i128
    %24 = muli %arg12, %c10_i128 : i128
    %25 = muli %arg3, %arg0 : i128
    %26 = muli %arg4, %arg1 : i128
    %27 = addi %25, %26 : i128
    %28 = muli %arg5, %arg2 : i128
    %29 = addi %27, %28 : i128
    %30 = muli %29, %c9_i128 : i128
    %31 = addi %24, %30 : i128
    %32 = muli %arg13, %c10_i128 : i128
    %33 = muli %arg3, %arg3 : i128
    %34 = muli %arg4, %arg4 : i128
    %35 = addi %33, %34 : i128
    %36 = muli %arg5, %arg5 : i128
    %37 = addi %35, %36 : i128
    %38 = muli %37, %c9_i128 : i128
    %39 = addi %32, %38 : i128
    %40 = muli %arg14, %c10_i128 : i128
    %41 = muli %arg3, %arg6 : i128
    %42 = muli %arg4, %arg7 : i128
    %43 = addi %41, %42 : i128
    %44 = muli %arg5, %arg8 : i128
    %45 = addi %43, %44 : i128
    %46 = muli %45, %c9_i128 : i128
    %47 = addi %40, %46 : i128
    %48 = muli %arg15, %c10_i128 : i128
    %49 = muli %arg6, %arg0 : i128
    %50 = muli %arg7, %arg1 : i128
    %51 = addi %49, %50 : i128
    %52 = muli %arg8, %arg2 : i128
    %53 = addi %51, %52 : i128
    %54 = muli %53, %c9_i128 : i128
    %55 = addi %48, %54 : i128
    %56 = muli %arg16, %c10_i128 : i128
    %57 = muli %arg6, %arg3 : i128
    %58 = muli %arg7, %arg4 : i128
    %59 = addi %57, %58 : i128
    %60 = muli %arg8, %arg5 : i128
    %61 = addi %59, %60 : i128
    %62 = muli %61, %c9_i128 : i128
    %63 = addi %56, %62 : i128
    %64 = muli %arg17, %c10_i128 : i128
    %65 = muli %arg6, %arg6 : i128
    %66 = muli %arg7, %arg7 : i128
    %67 = addi %65, %66 : i128
    %68 = muli %arg8, %arg8 : i128
    %69 = addi %67, %68 : i128
    %70 = muli %69, %c9_i128 : i128
    %71 = addi %64, %70 : i128
    return %7, %15, %23, %31, %39, %47, %55, %63, %71 : i128, i128, i128, i128, i128, i128, i128, i128, i128
  }
}

